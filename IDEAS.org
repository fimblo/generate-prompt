* Ideas etc

** General directions to consider
- Perhaps skip default prompts altogether. Depend entirely on envvar
  prompts to digest. This will make code simpler. Add different
  profiles to source as examples.

** Details/Refactor/Do Differently [/]
- [ ] Rename git-prompt to something like prompt-gen, since it doesn't
  have to be only for git.
- [ ] Simplify default prompt format. Complications can be done by user,
  and code will be cleaner
- [ ] Re-write printPrompt substitutions
  - Use \p as a indicator to signal intent to git-prompt. The \p will
    always be followed by one more character denoting the type of
    intent.

    Nice thing with the \p notation is that it will fit nicely with
    the normal terminal escape characters, and won't take as much room
    in the profile, so easier to overview.

  - \pn - Replace with git repository name
  - \pb - Replace with git branch (short) name
  - Other \pX ideas could be - # of commits ahead or behind, etc    
- [ ] Re-write printPrompt
  - Take correct prompt string from env, then step through it. Normal
    characters are copied directly into the target string. If a '\' is
    detected,that and following 2 chars are studied. If one of the
    above, add correct string (repo name or branch) to target string.
- [ ] Remove bonus programs, they can be in another repo.
- [ ] use '#' if user is root
