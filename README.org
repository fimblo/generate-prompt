* generate-prompt
[[https://github.com/fimblo/generate-prompt/actions/workflows/c.yml/badge.svg]]

Simple and fast prompt for bash which shows git repo status

** I wrote this because
- I'm a bash user, and
- bash functions to update the prompt when standing in a git repo is
  just too slow

** What does generate-prompt do?
- It prints a useful prompt, for easy plugging into PS1.
- It can tell if you're standing in a git repo or if you're outside of
  one. Depending on the situation, it will use one of the two main
  prompt types.
- If you're in a git repo, it will by default show you:
  - the name of the repo
  - the name of the branch
  - the basename of your current working directory
- It allows you to modify the prompt to your liking (advanced usage).

** Usage (basic)
Source the contents of =profile= into your bash shell. There's a lot
of stuff in there, mostly commented, but the core of it is:

#+begin_src bash
  prompt_cmd() {
    PS1="$(/path/to/generate-prompt)"
  }
  PROMPT_COMMAND=prompt_cmd
#+end_src

** Usage (More fun)
If you want to override the default prompts, here's what you can do.

=GP_DEFAULT_PROMPT= is the prompt you see when not in a git repo.

#+begin_src bash
export GP_DEFAULT_PROMPT="\[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;34m\]\W\[\033[00m\] $ "
#+end_src

If you want to override the way the prompt looks inside of a git
repo, then you'll need to set all four of these environment
variables.

This first envvar needs to be set to anything other than the empty
string. If it is unset, the remaining three envvars will not be
used.
#+begin_src bash
export GP_USE_GIT_PROMPTS_FROM_ENV="true"
#+end_src


These three can be modified to your heart's content, assuming the
above envvar has been set. There are two special strings which
=generate_prompt= looks for: =repo_name= and =branch_name=. These will
be replaced with the repo's name and the selected branch,
respectively.

#+begin_src bash
export GP_UP_TO_DATE_PROMPT="UPTODATE: repo: repo_name, branch: branch_name $ ";
export GP_MODIFIED_PROMPT="MODIFIED: repo: repo_name, branch: branch_name $ ";
export GP_STAGED_PROMPT="STAGED: repo: repo_name, branch: branch_name $ ";
#+end_src

** Dependencies
- [[https://github.com/libgit2/libgit2][libgit2]]

** Install

- Install dependency:
  - With homebrew: =brew install libgit2=
  - With apt: =sudo apt install libgit2-dev=
- Run =make= to build generate-prompt. (tested on mac and ubuntu)
- =make local-install= installs at ~/bin
- =sudo make install= installs at /usr/local/bin
- =make clean= cleans things up.
